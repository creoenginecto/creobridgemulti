/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BridgeFactory, BridgeFactoryInterface } from "../BridgeFactory";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "bridgeAssist",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "BridgeAssistAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "bridgeAssist",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "BridgeAssistCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "bridgeAssist",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "BridgeAssistRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "ADD_REMOVE_LIMIT_PER_TIME",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BRIDGE_OWNER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CREATOR_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bridges",
        type: "address[]",
      },
    ],
    name: "addBridgeAssists",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "bridgeAssistImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bridgeAssistImplementation_",
        type: "address",
      },
    ],
    name: "changeBridgeAssistImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "limitPerSend",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "feeWallet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "feeSend",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeFulfill",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "relayers",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "relayerConsensusThreshold",
        type: "uint256",
      },
    ],
    name: "createBridgeAssist",
    outputs: [
      {
        internalType: "address",
        name: "bridge",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getBridgeByToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "getBridgesByToken",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getBridgesByTokenLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getCreatedBridgeInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "bridgeAssist",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
        ],
        internalType: "struct BridgeFactory.BridgeAssistInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "getCreatedBridgesInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "bridgeAssist",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
        ],
        internalType: "struct BridgeFactory.BridgeAssistInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCreatedBridgesLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bridgeAssistImplementation_",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bridges",
        type: "address[]",
      },
    ],
    name: "removeBridgeAssists",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001961001e565b6100dd565b600054610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100db576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b61208780620000ed6000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80639c96a249116100b8578063b7109c371161007c578063b7109c37146102ee578063d547741f1461030e578063db04fbef14610321578063ecf103e014610329578063f5aa45ee1461033c578063ff8d07601461034457600080fd5b80639c96a2491461028d5780639e6cbec7146102a0578063a217fddf146102c0578063a2a2b131146102c8578063b2860278146102db57600080fd5b806341a712c41161010a57806341a712c4146101ef578063485cc9551461020257806353491e6b146102155780635c8c9435146102285780638aeda25a1461025357806391d148541461027a57600080fd5b806301ffc9a714610147578063248a9ca31461016f578063271270e0146101a05780632f2ff15d146101c757806336568abe146101dc575b600080fd5b61015a61015536600461199b565b610364565b60405190151581526020015b60405180910390f35b61019261017d3660046119c5565b60009081526065602052604090206001015490565b604051908152602001610166565b6101927fca93eeebffcc91aeddd69986d2392810138feb62c9e4efc6996600ed00e90b6d81565b6101da6101d53660046119fe565b61039b565b005b6101da6101ea3660046119fe565b6103c5565b6101da6101fd366004611ae6565b610448565b6101da610210366004611b23565b610711565b6101da610223366004611b51565b6108e3565b61023b610236366004611b6e565b610967565b6040516001600160a01b039091168152602001610166565b6101927f828634d95e775031b9ff576b159a8509d3053581a8c9c4d7d86899e0afcd882f81565b61015a6102883660046119fe565b610b0a565b61019261029b366004611b51565b610b35565b6102b36102ae3660046119c5565b610b56565b6040516101669190611c0a565b610192600081565b60975461023b906001600160a01b031681565b61023b6102e9366004611c2e565b610c4f565b6103016102fc366004611c5a565b610d25565b6040516101669190611cd3565b6101da61031c3660046119fe565b610ed9565b610192606481565b6101da610337366004611ae6565b610efe565b610192611128565b610357610352366004611ce6565b611139565b6040516101669190611d08565b60006001600160e01b03198216637965db0b60e01b148061039557506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000828152606560205260409020600101546103b68161130f565b6103c0838361131c565b505050565b6001600160a01b038116331461043a5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61044482826113a2565b5050565b60006104538161130f565b8151600081900361049a5760405162461bcd60e51b81526020600482015260116024820152705a65726f206c656e67746820617272617960781b6044820152606401610431565b60648111156104eb5760405162461bcd60e51b815260206004820152601a60248201527f4172726179206c656e6774682065786365656473206c696d69740000000000006044820152606401610431565b60005b8181101561070b5760006001600160a01b031684828151811061051357610513611d6b565b60200260200101516001600160a01b0316036105685761053281611409565b6040516020016105429190611da5565b60408051601f198184030181529082905262461bcd60e51b825261043191600401611dea565b61059584828151811061057d5761057d611d6b565b6020026020010151609861149c90919063ffffffff16565b6105b2576105a281611409565b6040516020016105429190611e1d565b60008482815181106105c6576105c6611d6b565b60200260200101516001600160a01b03166382bfefc86040518163ffffffff1660e01b8152600401602060405180830381865afa15801561060b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062f9190611e62565b90506001600160a01b0381166106585761064882611409565b6040516020016105429190611e7f565b6106a885838151811061066d5761066d611d6b565b6020026020010151609a6000846001600160a01b03166001600160a01b0316815260200190815260200160002061149c90919063ffffffff16565b50806001600160a01b03168583815181106106c5576106c5611d6b565b60200260200101516001600160a01b03167f7e47dab8afa7341cd3e835154f5aa693e96117bd5545f06c075601c0559e069760405160405180910390a3506001016104ee565b50505050565b600054610100900460ff16158080156107315750600054600160ff909116105b8061074b5750303b15801561074b575060005460ff166001145b6107ae5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610431565b6000805460ff1916600117905580156107d1576000805461ff0019166101001790555b6001600160a01b0383166108275760405162461bcd60e51b815260206004820152601a60248201527f42525f415353545f494d504c3a207a65726f20616464726573730000000000006044820152606401610431565b6001600160a01b0382166108735760405162461bcd60e51b81526020600482015260136024820152724f776e65723a207a65726f206164647265737360681b6044820152606401610431565b609780546001600160a01b0319166001600160a01b03851617905561089960008361131c565b80156103c0576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b60006108ee8161130f565b6001600160a01b0382166109445760405162461bcd60e51b815260206004820152601a60248201527f42525f415353545f494d504c3a207a65726f20616464726573730000000000006044820152606401610431565b50609780546001600160a01b0319166001600160a01b0392909216919091179055565b60007f828634d95e775031b9ff576b159a8509d3053581a8c9c4d7d86899e0afcd882f6109938161130f565b6109bd7fca93eeebffcc91aeddd69986d2392810138feb62c9e4efc6996600ed00e90b6d86610b0a565b610a015760405162461bcd60e51b815260206004820152601560248201527413dddb995c881b9bdd081dda1a5d195b1a5cdd1959605a1b6044820152606401610431565b609754610a16906001600160a01b03166114b1565b604051633406c17560e11b81529092506001600160a01b0383169063680d82ea90610a53908d908d908d908d908d908d908d908d90600401611ec4565b600060405180830381600087803b158015610a6d57600080fd5b505af1158015610a81573d6000803e3d6000fd5b50505050610a9982609861149c90919063ffffffff16565b506001600160a01b038a166000908152609a60205260409020610abc908361149c565b50896001600160a01b0316826001600160a01b03167fd9cba6538dbfc3bc2cfefe73c785f6a1a4c50e780195c79d86688d8f6a6da23460405160405180910390a35098975050505050505050565b60009182526065602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6001600160a01b0381166000908152609a602052604081206103959061154b565b6040805180820190915260008082526020820152610b74609861154b565b8210610bb25760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b6044820152606401610431565b6000610bbf609884611555565b90506040518060400160405280826001600160a01b03168152602001826001600160a01b03166382bfefc86040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3d9190611e62565b6001600160a01b031690529392505050565b60006001600160a01b038316610c9d5760405162461bcd60e51b8152602060048201526013602482015272546f6b656e3a207a65726f206164647265737360681b6044820152606401610431565b6001600160a01b0383166000908152609a60205260409020610cbe9061154b565b8210610cfc5760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b6044820152606401610431565b6001600160a01b0383166000908152609a60205260409020610d1e9083611555565b9392505050565b60606001600160a01b038416610d735760405162461bcd60e51b8152602060048201526013602482015272546f6b656e3a207a65726f206164647265737360681b6044820152606401610431565b81600003610db15760405162461bcd60e51b815260206004820152600b60248201526a4c696d69743a207a65726f60a81b6044820152606401610431565b6001600160a01b0384166000908152609a60205260409020610dd29061154b565b610ddc8385611f3a565b1115610e215760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081bd9999cd95d0b5b1a5b5a5d60621b6044820152606401610431565b60008267ffffffffffffffff811115610e3c57610e3c611a2e565b604051908082528060200260200182016040528015610e65578160200160208202803683370190505b50905060005b83811015610ed057610e9e610e808683611f3a565b6001600160a01b0388166000908152609a6020526040902090611555565b828281518110610eb057610eb0611d6b565b6001600160a01b0390921660209283029190910190910152600101610e6b565b50949350505050565b600082815260656020526040902060010154610ef48161130f565b6103c083836113a2565b6000610f098161130f565b81516000819003610f505760405162461bcd60e51b81526020600482015260116024820152705a65726f206c656e67746820617272617960781b6044820152606401610431565b6064811115610fa15760405162461bcd60e51b815260206004820152601a60248201527f4172726179206c656e6774682065786365656473206c696d69740000000000006044820152606401610431565b60005b8181101561070b57610fd9848281518110610fc157610fc1611d6b565b6020026020010151609861156190919063ffffffff16565b610ff657610fe681611409565b6040516020016105429190611f4d565b600084828151811061100a5761100a611d6b565b60200260200101516001600160a01b03166382bfefc86040518163ffffffff1660e01b8152600401602060405180830381865afa15801561104f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110739190611e62565b90506110c585838151811061108a5761108a611d6b565b6020026020010151609a6000846001600160a01b03166001600160a01b0316815260200190815260200160002061156190919063ffffffff16565b50806001600160a01b03168583815181106110e2576110e2611d6b565b60200260200101516001600160a01b03167f2615a9e874c601a8e854f4d4e70c6f9834de146d18f20aa54ae12c69c37a2ff760405160405180910390a350600101610fa4565b6000611134609861154b565b905090565b6060816000036111795760405162461bcd60e51b815260206004820152600b60248201526a4c696d69743a207a65726f60a81b6044820152606401610431565b611183609861154b565b61118d8385611f3a565b11156111d25760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081bd9999cd95d0b5b1a5b5a5d60621b6044820152606401610431565b60008267ffffffffffffffff8111156111ed576111ed611a2e565b60405190808252806020026020018201604052801561123257816020015b604080518082019091526000808252602082015281526020019060019003908161120b5790505b50905060005b8381101561130757600061125761124f8784611f3a565b609890611555565b90506040518060400160405280826001600160a01b03168152602001826001600160a01b03166382bfefc86040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d59190611e62565b6001600160a01b03168152508383815181106112f3576112f3611d6b565b602090810291909101015250600101611238565b509392505050565b6113198133611576565b50565b6113268282610b0a565b6104445760008281526065602090815260408083206001600160a01b03851684529091529020805460ff1916600117905561135e3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6113ac8282610b0a565b156104445760008281526065602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60606000611416836115a9565b600101905060008167ffffffffffffffff81111561143657611436611a2e565b6040519080825280601f01601f191660200182016040528015611460576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461146a57509392505050565b6000610d1e836001600160a01b038416611681565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008260601b60e81c176000526e5af43d82803e903d91602b57fd5bf38260781b17602052603760096000f090506001600160a01b0381166115465760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b6044820152606401610431565b919050565b6000610395825490565b6000610d1e83836116d0565b6000610d1e836001600160a01b0384166116fa565b6115808282610b0a565b6104445761158d816117ed565b6115988360206117ff565b604051602001610542929190611f85565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106115e85772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611614576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061163257662386f26fc10000830492506010015b6305f5e100831061164a576305f5e100830492506008015b612710831061165e57612710830492506004015b60648310611670576064830492506002015b600a83106103955760010192915050565b60008181526001830160205260408120546116c857508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610395565b506000610395565b60008260000182815481106116e7576116e7611d6b565b9060005260206000200154905092915050565b600081815260018301602052604081205480156117e357600061171e600183611ffa565b855490915060009061173290600190611ffa565b905081811461179757600086600001828154811061175257611752611d6b565b906000526020600020015490508087600001848154811061177557611775611d6b565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806117a8576117a861200d565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610395565b6000915050610395565b60606103956001600160a01b03831660145b6060600061180e836002612023565b611819906002611f3a565b67ffffffffffffffff81111561183157611831611a2e565b6040519080825280601f01601f19166020018201604052801561185b576020820181803683370190505b509050600360fc1b8160008151811061187657611876611d6b565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106118a5576118a5611d6b565b60200101906001600160f81b031916908160001a90535060006118c9846002612023565b6118d4906001611f3a565b90505b600181111561194c576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061190857611908611d6b565b1a60f81b82828151811061191e5761191e611d6b565b60200101906001600160f81b031916908160001a90535060049490941c936119458161203a565b90506118d7565b508315610d1e5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610431565b6000602082840312156119ad57600080fd5b81356001600160e01b031981168114610d1e57600080fd5b6000602082840312156119d757600080fd5b5035919050565b6001600160a01b038116811461131957600080fd5b8035611546816119de565b60008060408385031215611a1157600080fd5b823591506020830135611a23816119de565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611a5557600080fd5b8135602067ffffffffffffffff80831115611a7257611a72611a2e565b8260051b604051601f19603f83011681018181108482111715611a9757611a97611a2e565b604052938452858101830193838101925087851115611ab557600080fd5b83870191505b84821015611adb57611acc826119f3565b83529183019190830190611abb565b979650505050505050565b600060208284031215611af857600080fd5b813567ffffffffffffffff811115611b0f57600080fd5b611b1b84828501611a44565b949350505050565b60008060408385031215611b3657600080fd5b8235611b41816119de565b91506020830135611a23816119de565b600060208284031215611b6357600080fd5b8135610d1e816119de565b600080600080600080600080610100898b031215611b8b57600080fd5b8835611b96816119de565b9750602089013596506040890135611bad816119de565b9550606089013594506080890135935060a0890135611bcb816119de565b925060c089013567ffffffffffffffff811115611be757600080fd5b611bf38b828c01611a44565b92505060e089013590509295985092959890939650565b60408101610395828480516001600160a01b03908116835260209182015116910152565b60008060408385031215611c4157600080fd5b8235611c4c816119de565b946020939093013593505050565b600080600060608486031215611c6f57600080fd5b8335611c7a816119de565b95602085013595506040909401359392505050565b600081518084526020808501945080840160005b83811015611cc85781516001600160a01b031687529582019590820190600101611ca3565b509495945050505050565b602081526000610d1e6020830184611c8f565b60008060408385031215611cf957600080fd5b50508035926020909101359150565b602080825282518282018190526000919060409081850190868401855b82811015611d5e57611d4e84835180516001600160a01b03908116835260209182015116910152565b9284019290850190600101611d25565b5091979650505050505050565b634e487b7160e01b600052603260045260246000fd5b60005b83811015611d9c578181015183820152602001611d84565b50506000910152565b7f427269646765207a65726f206164647265737320617420696e6465783a200000815260008251611ddd81601e850160208701611d81565b91909101601e0192915050565b6020815260008251806020840152611e09816040850160208701611d81565b601f01601f19169190910160400192915050565b7f427269646765206475706c696361746520617420696e6465783a200000000000815260008251611e5581601b850160208701611d81565b91909101601b0192915050565b600060208284031215611e7457600080fd5b8151610d1e816119de565b7f546f6b656e207a65726f206164647265737320617420696e6465783a20000000815260008251611eb781601d850160208701611d81565b91909101601d0192915050565b6001600160a01b0389811682526020820189905287811660408301526060820187905260808201869052841660a082015261010060c08201819052600090611f0e83820186611c8f565b9150508260e08301529998505050505050505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561039557610395611f24565b7f427269646765206e6f7420666f756e6420617420696e6465783a200000000000815260008251611e5581601b850160208701611d81565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611fbd816017850160208801611d81565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611fee816028840160208801611d81565b01602801949350505050565b8181038181111561039557610395611f24565b634e487b7160e01b600052603160045260246000fd5b808202811582820484141761039557610395611f24565b60008161204957612049611f24565b50600019019056fea264697066735822122023d228fb32b9a8bfa6687a3233b0c0936210c69364883121d8c0c998e26f37f064736f6c63430008120033";

export class BridgeFactory__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BridgeFactory> {
    return super.deploy(overrides || {}) as Promise<BridgeFactory>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BridgeFactory {
    return super.attach(address) as BridgeFactory;
  }
  connect(signer: Signer): BridgeFactory__factory {
    return super.connect(signer) as BridgeFactory__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeFactoryInterface {
    return new utils.Interface(_abi) as BridgeFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeFactory {
    return new Contract(address, _abi, signerOrProvider) as BridgeFactory;
  }
}
